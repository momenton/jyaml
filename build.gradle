plugins {
    id 'java'
    id 'jacoco'
}

apply plugin: "groovy"

group 'jyaml'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    // Spock snapshots are available from the Sonatype OSS snapshot repository
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

sourceSets {
    main {
        java {
            srcDir 'src/main'
        }
    }

    test {
        groovy {
            srcDir 'src/test'
        }
      
    }
}
test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // mandatory dependencies for using Spock
    compile "org.codehaus.groovy:groovy-all:2.5.7"
    testCompile "org.spockframework:spock-core:2.0-groovy-2.5-SNAPSHOT"
    testCompile "org.spockframework:spock-junit4:2.0-groovy-2.5-SNAPSHOT"


    // optional dependencies for using Spock
    testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
    testRuntime "net.bytebuddy:byte-buddy:1.9.3"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:2.6"    // allows mocking of classes without default constructor (together with CGLIB)

    compile group: 'org.apache.jmeter', name: 'ApacheJMeter_core', version: '5.2.1'
    compile group: 'org.apache.jmeter', name: 'ApacheJMeter_http', version: '5.2.1'
    compile group: 'org.apache.jmeter', name: 'ApacheJMeter_java', version: '5.2.1'
    compile group: 'org.apache.jmeter', name: 'ApacheJMeter_jdbc', version: '5.2.1'
    compile group: 'kg.apc', name: 'jmeter-plugins-casutg', version: '2.9'
    compile group: 'kg.apc', name: 'jmeter-plugins-tst', version: '2.5'
    compile group: 'kg.apc', name: 'jmeter-plugins-ffw', version: '2.0'
    compile group: 'com.beust', name: 'jcommander', version: '1.78'
    compile 'org.yaml:snakeyaml:1.21'
    compile 'org.projectlombok:lombok:1.18.10'
}

task buildJmx(type: JavaExec) {
    group 'Jyaml'
    description 'Create jmx file from yaml. Use -help to display usage options'
    classpath = sourceSets.main.runtimeClasspath
    main = 'au.com.momenton.jyaml.JmxBuilder'
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/customJacocoReportDir")
}


jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
